/* REXX to trap output from a given command and, instead of letting it
display once and be lost, copies it to a temporary dataset for browsing.
This is useful in two cases:  1) When the output is rather long and it'd
be nice to be able to browse up and down through it (for example as with
HELP XMIT or LISTCAT HISTORY), and 2) when you want to be able to search
through it for a particular string, or otherwise manipulate it with VIEW
commands.

To make the call, just insert DISP between TSO and the command; for
example, instead of saying TSO HELP XMIT, say TSO DISP HELP XMIT. */

arg cmd

/* Turn any single quotes into triples */
pq=pos("'",cmd); do while pq>0
  cmd=insert("''",cmd,pq)
  pq=pos("'",cmd,pq+3); end

rc=outtrap('op.'); interpret "'"cmd"'"; rc=outtrap('OFF')
if op.0=0 then say,
  "No output, or TRAP can't handle this type of output"
else do
  vx=sysvar('SYSWTERM')
  'ALLOCATE DDN(DISPTRAP) NEW REUSE LRECL('vx')'; call chkrc 'ALLOCATE'
  'EXECIO * DISKW DISPTRAP (STEM OP. FINIS';      call chkrc 'EXECIO'
  'ISPEXEC LMINIT DATAID(OP) DDNAME(DISPTRAP)';   call chkrc 'LMINIT'
  'ISPEXEC VIEW DATAID('op')';                    call chkrc 'VIEW'
  'FREE DDN(DISPTRAP)';                           call chkrc 'FREE'
  end
exit 0

chkrc: arg stm;
  if rc=0 then return
  if stm='LMINIT' then do
    say strip(zerrsm) '(help panel =' zerrhm')'
    say strip(zerrlm); end
  msg=stm 'returns' rc;
  if rc>4 & wordpos(stm,'ALLOCATE FREE')=0 then do
    'FREE DDN(DISPTRAP)'; call abend msg; end;
  say '*  ' msg'!'; return

abend: parse arg msg; say '***' msg; parse source . . self .
  say '   ' self 'abending (RC=8)'; exit 8
